desc stu_perf1;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| eno   | decimal(6,0) | NO   |     | NULL    |       |
| name  | varchar(10)  | YES  |     | NULL    |       |
| sub1  | decimal(2,0) | YES  |     | NULL    |       |
| sub2  | decimal(3,0) | YES  |     | NULL    |       |
| grade | char(1)      | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+


mysql> desc log_sf;
+-----------+--------------+------+-----+---------+-------+
| Field     | Type         | Null | Key | Default | Extra |
+-----------+--------------+------+-----+---------+-------+
| eno       | decimal(6,0) | YES  |     | NULL    |       |
| name      | varchar(10)  | YES  |     | NULL    |       |
| sub1      | decimal(2,0) | YES  |     | NULL    |       |
| sub2      | decimal(3,0) | YES  |     | NULL    |       |
| grade     | char(1)      | YES  |     | NULL    |       |
| operation | varchar(25)  | YES  |     | NULL    |       |
| username  | varchar(20)  | YES  |     | NULL    |       |
| op_time   | timestamp    | YES  |     | NULL    |       |
+-----------+--------------+------+-----+---------+-------+


delimiter //
create trigger trig_sp_update 
after update 
on stu_perf1 
for each row
begin
insert into log_sf values (old.eno, old.name, old.sub1, old.sub2, old.grade, 
"Update", user(), now());
end//

delimiter ;







 create table smarks (eno int primary key, name varchar(10), dbms int, ds int, per float);
mysql> desc smarks;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| eno   | int         | NO   | PRI | NULL    |       |
| name  | varchar(10) | YES  |     | NULL    |       |
| dbms  | int         | YES  |     | NULL    |       |
| ds    | int         | YES  |     | NULL    |       |
| per   | float       | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+


delimiter //
create trigger ins_per_smarks 
before insert 
on smarks 
for each row begin
set new.per = (new.dbms+new.ds)/2;
end//


delimiter ;

insert into smarks (eno,name,dbms,ds) values (123,'Nilesh', 70, 80);

select * from smarks;
+-----+--------+------+------+------+
| eno | name   | dbms | ds   | per  |
+-----+--------+------+------+------+
| 123 | Nilesh |   70 |   80 |   75 |
+-----+--------+------+------+------+




mysql> desc sgrade;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| eno   | int         | NO   |     | NULL    |       |
| name  | varchar(10) | YES  |     | NULL    |       |
| dbms  | int         | YES  |     | NULL    |       |
| ds    | int         | YES  |     | NULL    |       |
| grade | char(1)     | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
5 rows in set (0.03 sec)

mysql> select * from sgrade;
+-----+--------+------+------+-------+
| eno | name   | dbms | ds   | grade |
+-----+--------+------+------+-------+
| 123 | Nilesh |   70 |   80 | A     |
| 124 | Paresh |   45 |   90 | P     |
| 125 | Param  |   85 |   90 | B     |
+-----+--------+------+------+-------+


delimiter //
create trigger ins_grade 
before insert 
on sgrade 
for each row begin
if (new.dbms>=50) then 
set new.grade = 'B';
else if (new.dbms >= 35) then
set new.grade = 'P';
else 
set new.grade = 'F';
end if;
end if;
end//

